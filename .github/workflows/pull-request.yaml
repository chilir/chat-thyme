name: Pull request
on:
  pull_request:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-and-build:
    name: Test/build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v29

      - name: Check Nix flake
        uses: DeterminateSystems/flake-checker-action@v9
        with:
          fail-mode: true

      - name: Run Bun test runner
        run: |
          nix develop --command bash -c '
            bun install --no-progress --frozen-lockfile
            bun --env-file=.env.test test
          '

      - name: Build chat-thyme with Nix
        run: nix build

      - name: Check built chat-thyme app help menu
        run: result/bin/app --help

      - name: Check Nix run default command help menu
        run: nix run . -- --help

      - name: Check Nix run chat-thyme command help menu
        run: nix run .#chat-thyme -- --help

  lint-and-format:
    name: Lint/format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Biome
        uses: biomejs/setup-biome@v2

      - name: Run Biome
        run: biome ci --changed --no-errors-on-unmatched

  docker-build:
    name: Docker build
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm]
        platform: [linux/amd64, linux/arm64]
        exclude:
          - os: ubuntu-24.04-arm
            platform: linux/amd64
          - os: ubuntu-latest
            platform: linux/arm64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Get Docker metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha

      - name: Set up Docker build system
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: .
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          platforms: ${{ matrix.platform }}

      - name: Check containerized chat-thyme app help menu
        run: |
          docker run \
            --rm \
            --entrypoint /app/bin/app \
            ${{ fromJSON(steps.build.outputs.metadata)['image.name'] }} \
            --help