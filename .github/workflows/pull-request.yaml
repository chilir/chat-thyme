name: "Pull request"
on:
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-and-build:
    name: Test/build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v29
      - name: Check Nix flake
        run: nix flake check --all-systems
      - name: Bun tests
        run: |
          nix develop --command bash -c '
            bun install --no-progress --frozen-lockfile
            bun --env-file=.env.test test
          '
      - run: nix build
      - name: Check built chat-thyme app help menu
        run: result/bin/app --help

  lint-and-format:
    name: Lint/format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Biome
        uses: biomejs/setup-biome@v2
      - name: Run Biome
        run: biome ci --changed --no-errors-on-unmatched

  docker-build:
    name: Docker build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3  # login for cache
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        id: build
        with:
          context: .
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64
      - name: Check containerized chat-thyme app help menu
        run: |
          docker run \
            --rm \
            --entrypoint /app/bin/app \
            ${{ fromJson(steps.build.outputs.metadata).image.name }} \
            --help