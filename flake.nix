# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.21)
{
  # A helpful description of your flake
  description = "test";

  # Flake inputs
  inputs = {
    flake-schemas.url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*";
    nixpkgs.url = "https://flakehub.com/f/NixOS/nixpkgs/0.1.0.tar.gz";
  };

  # Flake outputs that other flakes can use
  outputs = { self, flake-schemas, nixpkgs }:
    let
      # Helpers for producing system-specific outputs
      supportedSystems = [ "x86_64-linux" "aarch64-darwin" "x86_64-darwin" "aarch64-linux" ];
      forEachSupportedSystem = f: nixpkgs.lib.genAttrs supportedSystems (system: f {
        pkgs = import nixpkgs { inherit system; };
      });
    in {
      # Schemas tell Nix about the structure of your flake's outputs
      schemas = flake-schemas.schemas;

      # Development environments
      devShells = forEachSupportedSystem ({ pkgs }: {
        default = pkgs.mkShell {
          # Pinned packages available in the environment
          buildInputs = with pkgs; [
            bun
            # curl
            # git
            # jq
            # wget
            # nixpkgs-fmt
            # sqlite
          ];

          # A hook run every time you enter the environment
          shellHook = ''
            echo "Using bun $(bun --version)"
          '';
        };
      });

      packages = forEachSupportedSystem ({ pkgs }: {
        default = pkgs.stdenv.mkDerivation rec {
          pname = "chat-thyme";
          version = "0.1.0";
          name = "app";

          src = ./.;
          nativeBuildInputs = [ pkgs.bun pkgs.makeWrapper ];
          buildInputs = [ pkgs.bun ];
          buildPhase = ''
            export HOME=$TMPDIR
            bun install --no-progress \
              --frozen-lockfile \
              --production || exit 1
            bun build src/index.ts \
              --sourcemap \
              --target=bun \
              --outdir=dist || exit 1
          '';

          installPhase = ''
            mkdir -p $out/{lib,bin}
            cp dist/* $out/lib/
            makeWrapper ${pkgs.bun}/bin/bun $out/bin/${name} \
              --add-flags "$out/lib/index.js"
          '';
        };
      });
    };
}
